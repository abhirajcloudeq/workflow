
name: 'Terraform Apply/Destroy'

on:
   workflow_dispatch:
      inputs:
         action:
         description: "Apply or Destroy"
         required: true
         default: "apply"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
         working-directory: ./ParentModule

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
   
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
         aws-access-key-id :  ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-session-token :     ${{ secrets.AWS_SESSION_TOKEN }}
         aws-region : us-east-1

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ${{env.working-directory}}
    # Checks that all Terraform configuration files adhere to a canonical format
#     - name: Terraform Format
#       run: terraform fmt 
#       working-directory: ${{env.working-directory}}

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ${{env.working-directory}}
      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply/Destroy
      run: terraform  ${{ github.event.inputs.action }} -auto-approve  
      working-directory: ${{env.working-directory}}
